import type { TaskUpdate } from "../../../../server/types";
export interface Input {
  id: number;
  text: string | null;
  finished: boolean | null;
  onUpdate: (task: TaskUpdate) => void;
}

<const/onSubmit=(
  async (event: SubmitEvent) => {
    event.preventDefault();

    const formData = new FormData(event.target as HTMLFormElement);

    input.onUpdate({
      finished: formData.get("finished") === "true",
      text: formData.get("text") as string,
    });

    await fetch("/todos", { body: formData, method: "POST" });
  }
)/>

<form class="flex gap-2 items-center flex-grow" method="POST" onSubmit=onSubmit>
  <input type="hidden" name="action" value="update">
  <input type="hidden" name="id" value=input.id>

  <app-input>
    <@label for="finished" class="sr-only">
      Finished
    </@label>
    <@checkbox id="finished" name="finished" checked=input.finished/>
  </app-input>

  <app-input class="flex-grow">
    <@label for="text" class="sr-only">
      Text
    </@label>
    <@text
      placeholder="Text"
      variant="bordered"
      id="text"
      name="text"
      type="text"
      value=input.text
      size="sm"
    />
  </app-input>

  <app-button color="secondary" size="sm">
    Update
  </app-button>

  <app-button color="warning" type="reset" size="sm">
    Reset
  </app-button>
</form>
